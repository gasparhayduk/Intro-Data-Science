help()
seq(from = 100, to = 200, by = 5)
c(1:100)
n <- c(2, 3, 5)
b <- c(TRUE, FALSE, TRUE, FALSE, FALSE)
lista1 <- list(n, b, 3)
lista2 <- list(numVar = n, logVar = b, scalar = 3)
lista2[[2]]
lista2$logVar
lista2$logVar[3]
c(1,3)
c(1, 3, 5) == 3
mtcars
?mtcars
mtcars$mpg > 20
mtcars[mtcars$mpg > 20,]
mtcars$mpg > 20 & mtcars$mpg <= 25
mtcars[mtcars$mpg > 20 & mtcars$mpg <= 25,]
c(2,6)
c(1, 2, 5, 10) %in% c(5, 8, 10)
mtcars$carb %in% c(2,6)
?grepl
mtcars[grepl("Merc", rownames(mtcars))
mtcars[grepl("Merc", rownames(mtcars)),]
mtcars[grepl("Merc", rownames(mtcars)),]
?mtcars
?setwd
bicis <- read.table("recorrido-bicis-2015.csv", header = TRUE,
sep = ";", stringsAsFactors = TRUE)
setwd("C:/Desktop/intro_datascience")
getwd()
setwd("C:/Users/gasparhayduk/Desktop/intro_datascience")
getwd()
strptime("22:05:32", "%H:%M:%OS")
Sys.time("2022-03-10 22:05:32 -03")
class(strptime("22:05:32", "%H:%M:%OS"))
?POSIXlt
as.numeric(strptime("22:05:32", "%H:%M:%OS"))
setwd("C:/Users/gasparhayduk/Home/Desktop/intro_datascience")
setwd("C:Home/Desktop/intro_datascience")
setwd("C:Users/gasparhayduk/Home/Desktop/intro_datascience")
rm(list=ls())
rm(list=ls())
install.packages("pROC")
library(rpart)
library(pROC)
library(ggplot2)
setwd("~/Desktop/IntroDS/Sesion07")
data_bank <- read.table("bank-full.csv", sep=";", header=TRUE)
View(data_bank)
prop.table(table(data_bank$y))
train_index <- sample(c(1:nrow(data_bank)), 36200)
training_bank <- data_bank[train_index,]
evaluation_bank <- data_bank[-train_index,]
tree_fit <- rpart(y ~ ., data = training_bank,
control = rpart.control(maxdepth = 30, xval=0, cp=0))
preds_p <- predict(tree_fit, newdata=evaluation_bank)[, "yes"]
prec_recall <- function(conf_m, verbose=TRUE) {
if (verbose) {
print(conf_m)
}
prec <- conf_m["yes", "yes"] / sum((conf_m[, "yes"]))
rec <- conf_m["yes", "yes"] / sum((conf_m["yes",]))
f1 <- 2 * prec * rec / (prec + rec)
fpr <- conf_m["no", "yes"] / sum((conf_m["no",]))
return(data.frame(prec=prec, rec=rec, f1=f1, tpr=rec, fpr=fpr))
}
ggplot(data.frame(p=preds_p, clase=evaluation_bank$y), aes(x=p, col=clase, fill=clase)) +
geom_density(alpha=0.5)
prec_recall <- function(conf_m, verbose=TRUE) {
if (verbose) {
print(conf_m)
}
prec <- conf_m["yes", "yes"] / sum((conf_m[, "yes"]))
rec <- conf_m["yes", "yes"] / sum((conf_m["yes",]))
f1 <- 2 * prec * rec / (prec + rec)
fpr <- conf_m["no", "yes"] / sum((conf_m["no",]))
return(data.frame(prec=prec, rec=rec, f1=f1, tpr=rec, fpr=fpr))
}
View(prec_recall)
View(prec_recall)
prec_recall(table(actual=evaluation_bank$y,
pred=factor(ifelse(preds_p >= 0.5, "yes", "no"))))
prec_recall(table(actual=evaluation_bank$y,
pred=factor(ifelse(preds_p >= 0.3, "yes", "no"))))
prec_recall(table(actual=evaluation_bank$y,
pred=factor(ifelse(preds_p >= 0.7, "yes", "no"))))
data_roc <- data.frame()
for (p in seq(0.001, 0.999, by=0.001)) {
data_roc <- rbind(data_roc,
prec_recall(table(actual=evaluation_bank$y,
pred=factor(ifelse(preds_p > p,
"yes", "no"))),
verbose=FALSE)[, c("fpr", "tpr")])
}
plot(data_roc, type="l", xlim=c(0, 1), ylim=c(0, 1))
abline(c(0,1))
auc(roc(ifelse(evaluation_bank$y=="yes", 1, 0), preds_p))
